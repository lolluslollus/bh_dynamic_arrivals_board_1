local constants = require('lolloArrivalsDeparturesPredictor.constants')
local constructionConfigs = require('lolloArrivalsDeparturesPredictor.constructionConfigs')
local constructionHelpers = require('lolloArrivalsDeparturesPredictor.constructionHelpers')

local _styles = { 'station_board', 'station_board_hanging', 'station_board_floating', 'station_wide_board', 'station_wide_board_hanging', 'station_wide_board_floating' }

local _paramPrefix = constructionConfigs.getParamPrefixFromCon()

local function _getParamName(name)
    -- return constants.paramPrefix .. name
    return _paramPrefix .. name
end

local function _getMdl(style)
    return 'lolloArrivalsDeparturesPredictor/' .. style .. '.mdl'
end

local function _getParams()
    local params = {
        {
            key = _getParamName('style'),
            name = _('Style'),
            uiType = 'ICON_BUTTON',
            values = constructionHelpers.getIcons(_styles),
            defaultIndex = 3
        },
    }
    constructionHelpers.addCargoOverrideParam(params, _getParamName)

    return params
end

function data()
    return {
        type = 'ASSET_DEFAULT',
        description = {
            name = _('StationArrivalsDisplayName'),
            description = _('StationArrivalsDisplayDesc'),
            icon = 'ui/construction/asset/lolloArrivalsDeparturesPredictor/station_arrivals_display@2x.tga'
        },
        availability = {},
        buildMode = 'SINGLE',
        categories = { 'displays' },
        order = 11,
        skipCollision = true,
        autoRemovable = false,
        params = _getParams(),
        updateFn = function(params)
            local result = {
                groundFaces = constructionHelpers.getDummyGroundFaces(),
                models = {},
                terrainAlignmentLists = constructionHelpers.getDummyTerrainAlignmentLists(),
            }

            local _style = _styles[params[_getParamName('style')] + 1]
            result.models[#result.models + 1] = {
                id = _getMdl(_style),
                transf = constants.idTransf,
            }
            -- result.models[#result.models + 1] = {
            --     id = 'lolloArrivalsDeparturesPredictor/icon/blue.mdl',
            --     transf = {1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1}
            -- }

            return result
        end,
        upgradeFn = function(_)
        end
    }
end
